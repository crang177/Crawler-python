# Form implementation generated from reading ui file 'd:\GitHubData\Crawler-python\1.8-request_下\验证码\j简单的数字英文验证码识别\pyqt\gyshi.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import *
import ddddocr
import requests,os
from lxml import etree


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setMinimumSize(QtCore.QSize(800, 0))
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(420, 70, 81, 16))
        self.label_3.setObjectName("label_3")

        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(450, 170, 31, 23))
        self.pushButton.setObjectName("pushButton")

        self.splitter_3 = QtWidgets.QSplitter(parent=self.centralwidget)
        self.splitter_3.setGeometry(QtCore.QRect(360, 120, 169, 42))
        self.splitter_3.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.splitter_3.setObjectName("splitter_3")

        self.splitter = QtWidgets.QSplitter(parent=self.splitter_3)
        self.splitter.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.splitter.setObjectName("splitter")

        self.label = QtWidgets.QLabel(parent=self.splitter)
        self.label.setObjectName("label")

        self.lineEdit = QtWidgets.QLineEdit(parent=self.splitter)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")

        self.splitter_2 = QtWidgets.QSplitter(parent=self.splitter_3)
        self.splitter_2.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.splitter_2.setObjectName("splitter_2")

        self.label_2 = QtWidgets.QLabel(parent=self.splitter_2)
        self.label_2.setObjectName("label_2")

        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.splitter_2)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setEchoMode(QLineEdit.EchoMode.PasswordEchoOnEdit)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.login1) 
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_3.setText(_translate("MainWindow", "登录古诗文网"))
        self.pushButton.setText(_translate("MainWindow", "登录"))
        self.label.setText(_translate("MainWindow", "账号："))
        self.label_2.setText(_translate("MainWindow", "密码："))


    def login1(self):
        self.id=self.lineEdit.text()
        self.password=self.lineEdit_2.text()
        self.session=requests.Session()
        self.main()


    


    def identify_code(self):#先找到验证码的url，然后保存url，使用session的原因：对于图片的url来说，每访问一次就会刷新一次，验证码就会改变，所以要用session来维持当前的会话，此时若发送登录的请求就是使用的是当前的验证码
    #然后使用ddddocr库来识别验证码

        os.system("cls")
        pic_url="https://www.gushiwen.cn/RandCode.ashx"
        
        pic_res=self.session.get(pic_url)
        with open("1.8-request_下\验证码\j简单的数字英文验证码识别\yzm_poetry.jpg","wb") as fp:
            fp.write(pic_res.content)


        ocr=ddddocr.DdddOcr(show_ad=False)#show_ad=False省略掉行业标语，实例化
        with open("1.8-request_下\验证码\j简单的数字英文验证码识别\yzm_poetry.jpg","rb") as fp:
            pic_bytes=fp.read()#读取图片
        pic_yzm=ocr.classification(pic_bytes).upper()#识别验证码
        return pic_yzm
    
    def login_web(self,pic_yzm,id,password):#登录网站：全部用的都是session，即一直维持着会话，登录前和登陆后的cookie不一样，session的作用是自动使用上一次的cookie，会自己更新
        url='https://www.gushiwen.cn/user/login.aspx?'
        headers={
            "User-Agent":'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
            "Referer":'https://www.gushiwen.cn/user/login.aspx?'
        }
        params={
            "from": "http://www.gushiwen.cn/user/collect.aspx"
        }

        data={
            "__VIEWSTATE":'6q36H7Ym3+NSJXnBxUg3VPnL1m1TzyGgvuv0XoWsgAoJY+WQU+zm6F/I0fZyrBJinka5Z2wJ25i2vAEE+NrVRi4YgjietlQyWSFUYdgT/ck4+TPJCIyZJw206Y8xCUVd5BnYkuC+GQvbF70vqi06hAjZx7g=',
            "__VIEWSTATEGENERATOR": 'C93BE1AE',
            "from": "http://www.gushiwen.cn/user/collect.aspx",
            "email": id,
            "pwd": password,
            "code": pic_yzm,#验证码
            "denglu": "登录",
        }
        self.session.post(url=url,headers=headers,params=params,data=data)#发送登录的请求

    def main(self):
        pic_yzm=self.identify_code()
        self.login_web(pic_yzm,self.id,self.password)

        a=self.session.get('https://www.gushiwen.cn/user/collect.aspx?type=m&id=6700910&sort=t')
        a.encoding=a.apparent_encoding
        print(a.text)
        print()